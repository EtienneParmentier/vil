#version 460

#extension GL_GOOGLE_include_directive : require

layout(local_size_x_id = 0, local_size_y_id = 1) in;

#define SAMPLE_TEX_BINDING 1
#include "sample.glsl"
#include "histogram.glsl"

layout(push_constant) uniform PCR {
	int level;
} pcr;

layout(set = 0, binding = 0) buffer Hist {
	HistMetadata meta;
	uvec4 data[];
} hist;

void main() {
	ivec3 coords = ivec3(gl_GlobalInvocationID.xyz);
	if(!coordsInside(coords, pcr.level)) {
		return;
	}

	vec4 col = fetchTex(coords, pcr.level);

	// TODO: could speed this up with subgroup ballot
	// so we only do three atomic instructions per subgroup

	float range = hist.meta.end - hist.meta.begin;

	int len = hist.data.length();
	for(uint i = 0u; i < 4; ++i) {
		float pos = (col[i] - hist.meta.begin) / range;
		// uint id = clamp(pos * len, 0, len - 1);
		int id = int(pos * len);
		if(id > 0 && id < len) {
			atomicAdd(hist.data[id][i], 1u);
		}
	}
}

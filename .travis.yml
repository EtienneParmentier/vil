# TODO:
# - test debug and release builds
# - test 32-bit build? Not sure if we even want to support it though.
# - add some basic testing, not needing a gpu
# - build mingw and visual studio, just use https://chocolatey.org/packages/mingw
#   Just not calling vs vars script actually already calls mingw! fix that up.
# - test meson visual studio backend, msbuild
# - use apt addons instead of apt-get for packages we need?

matrix:
  include:
    # windows
    - name: "Windows"
      os: windows           # Windows 10.0.17134 N/A Build 17134
      language: shell
      env: PATH="/c/Program Files (x86)/Microsoft Visual Studio/2019/BuildTools/MSBuild/Current/Bin:/c/Python39:/c/Python39/Scripts:$PATH"
      before_install:
        - choco install python --version 3.9.0
        - choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64"
        - python --version
        - python -m pip install --upgrade pip
    # linux, gcc
    - name: "Linux GCC"
      env: 
        - CC=gcc
        - CXX=g++
      arch: amd64
      addons: &gcc10
        apt:
          packages:
            - gcc-10
            - g++-10
      os: linux
      dist: focal
      language: python
    # linux, clang
    # TODO: randomly broke with travis, can't get it to work again.
    # apt really is a wonderful package manager, jeez
    # - name: "Linux clang"
    #   env:
    #     - CC=clang
    #     - CXX=clang++
    #   arch: amd64
    #   addons: &clang11
    #     apt:
    #       packages:
    #         - clang-11
    #       sources:
    #         - sourceline: 'ppa:ubuntu-toolchain-r/test'
    #         - sourceline: 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'
    #           key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
    #   os: linux
    #   dist: focal
    #   language: python

install:
  - pip3 install meson ninja
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get -y -f install libvulkan-dev libvulkan1 vulkan-utils glslang-tools
    libxkbcommon-dev libwayland-dev libxcb1-dev wayland-protocols libxcb-ewmh-dev
    libxcb-icccm4-dev libxcb-shm0-dev libxcb-present-dev libxcb-xinput-dev libxcb-xkb-dev
    libxkbcommon-x11-dev libx11-dev libx11-xcb-dev; fi

script:
  - if [ "$TRAVIS_OS_NAME" == "windows" ]; then ./build.bat; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then meson build -Dwith_tests=true -Dwith_x11=false --backend=ninja; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then ninja -C build; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then ./build/viltest; fi

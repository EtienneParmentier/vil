name: C/C++ CI

on:
  push:
    branches: [ master ]
    paths:
      - "**.c"
      - "**.cpp"
      - "**.h"
      - "**.hpp"
      - "**.inl"
      - "**.comp"
      - "**.vert"
      - "**.frag"
  pull_request:
    branches: [ master ]
    paths:
      - "**.c"
      - "**.cpp"
      - "**.h"
      - "**.hpp"
      - "**.inl"
      - "**.comp"
      - "**.vert"
      - "**.frag"

# NOTE: we currently don't test all permutations of {release, debug, ...},
# {tracy, !tracy}, {gcc, clang, msvc, msvc-ninja} since it would be many

# TODO: integration tests not enabled at the moment

jobs:
  linux-gcc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: pip install meson ninja
    - name: Install deps
      run: sudo apt-get -y -f install libvulkan-dev libvulkan1 vulkan-utils glslang-tools
        libxkbcommon-dev libwayland-dev libxcb1-dev wayland-protocols libxcb-ewmh-dev
        libxcb-icccm4-dev libxcb-shm0-dev libxcb-present-dev libxcb-xinput-dev libxcb-xkb-dev
        libxkbcommon-x11-dev libx11-dev libx11-xcb-dev
    - run: meson setup build/ --backend=ninja -Dunit-tests=true -Dintegration-tests=false -Dx11-hook=false -Dtracy=true
      env:
        CC: gcc
    - run: meson test -C build/ -v

  linux-gcc-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: pip install meson ninja
    - name: Install deps
      run: sudo apt-get -y -f install libvulkan-dev libvulkan1 vulkan-utils glslang-tools
        libxkbcommon-dev libwayland-dev libxcb1-dev wayland-protocols libxcb-ewmh-dev
        libxcb-icccm4-dev libxcb-shm0-dev libxcb-present-dev libxcb-xinput-dev libxcb-xkb-dev
        libxkbcommon-x11-dev libx11-dev libx11-xcb-dev
    - run: meson setup build/ --backend=ninja -Dunit-tests=true -Dintegration-tests=false -Dx11-hook=false -Dbuildtype=release
      env:
        CC: gcc
    - run: meson test -C build/ -v

  linux-clang:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Set up Clang
      uses: egor-tensin/setup-clang@v1
      with:
        version: 12
    - run: pip install meson ninja
    - name: Install deps
      run: sudo apt-get -y -f install libvulkan-dev libvulkan1 vulkan-utils glslang-tools
        libxkbcommon-dev libwayland-dev libxcb1-dev wayland-protocols libxcb-ewmh-dev
        libxcb-icccm4-dev libxcb-shm0-dev libxcb-present-dev libxcb-xinput-dev libxcb-xkb-dev
        libxkbcommon-x11-dev libx11-dev libx11-xcb-dev
    - run: meson setup build/ --backend=ninja -Dunit-tests=true -Dintegration-tests=false -Dx11-hook=false
    - run: meson test -C build/ -v

  linux-clang-tracy-debugoptimized:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Set up Clang
      uses: egor-tensin/setup-clang@v1
      with:
        version: 12
    - run: pip install meson ninja
    - name: Install deps
      run: sudo apt-get -y -f install libvulkan-dev libvulkan1 vulkan-utils glslang-tools
        libxkbcommon-dev libwayland-dev libxcb1-dev wayland-protocols libxcb-ewmh-dev
        libxcb-icccm4-dev libxcb-shm0-dev libxcb-present-dev libxcb-xinput-dev libxcb-xkb-dev
        libxkbcommon-x11-dev libx11-dev libx11-xcb-dev
    - run: meson setup build/ --backend=ninja -Dunit-tests=true -Dintegration-tests=false -Dx11-hook=false -Dtracy=true -Dbuildtype=debugoptimized
    - run: meson test -C build/ -v

  # See https://dvdhrm.github.io/2021/04/21/meson-msvc-github-actions/
  windows-ninja:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: pip install meson ninja
    - name: Prepare MSVC
      uses: bus1/cabuild/action/msdevshell@v1
      with:
        architecture: x64
    - run: meson setup build/ --backend=ninja -Dunit-tests=true
    - run: meson test -C build/ -v

  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: pip install meson ninja
    - name: Prepare MSVC
      uses: bus1/cabuild/action/msdevshell@v1
      with:
        architecture: x64
    - run: meson setup build/ -Dunit-tests=true
    - run: meson test -C build/ -v

  windows-release:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: pip install meson ninja
    - name: Prepare MSVC
      uses: bus1/cabuild/action/msdevshell@v1
      with:
        architecture: x64
    - run: meson setup build/ -Dunit-tests=true -Dbuildtype=release
    - run: meson test -C build/ -v

  windows-release-tracy:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: pip install meson ninja
    - name: Prepare MSVC
      uses: bus1/cabuild/action/msdevshell@v1
      with:
        architecture: x64
    - run: meson setup build/ -Dunit-tests=true -Dbuildtype=release -Dtracy=true
    - run: meson test -C build/ -v

# TODO:
# - test 32-bit build? Not sure if we even want to support it though.
# - test mingw?  Just not calling vs vars script actually already calls mingw.
#   But the version does not seem to be new enough
# - test other gcc versions? Current ubuntu build only has v9
